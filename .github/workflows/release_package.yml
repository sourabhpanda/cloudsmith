name: Publish Python Package

on:
  workflow_run:
    workflows: ["Build Python Package"]
    types:
      - completed
    branches:
      - main

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_REPOSITORY: "staging"
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}

permissions:
  contents: read
  actions: read
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist
          repository: ${{ github.repository }}
          github-token: ${{ github.token }}
          run-id: ${{ github.event.workflow_run.id }}



      - name: List directory contents
        run: ls -la dist/
        shell: bash

      - name: Install Cloudsmith CLI
        run: pip install cloudsmith-cli

      - name: Get OIDC token
        run: |
          value=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange" | jq '.value')
          namespace="${{ env.CLOUDSMITH_NAMESPACE }}"
          service_slug="${{ env.CLOUDSMITH_SERVICE_SLUG }}"

          token=$(curl -X POST -H "Content-Type: application/json" -d "{\"oidc_token\":$value, \"service_slug\":\"$service_slug\"}" https://api.cloudsmith.io/openid/$namespace/ | jq -r '.token')

          curl --request GET --url https://api.cloudsmith.io/v1/user/self/ --header "X-Api-Key:Bearer $token" --header 'accept: application/json'
                    
          echo "CLOUDSMITH_API_KEY=$token" >> $GITHUB_ENV
      - name: Create Cloudsmith repo if not exists
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
            --header "Authorization: Bearer $CLOUDSMITH_API_KEY" \
            https://api.cloudsmith.io/v1/repos/${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_REPOSITORY }}/)

          if [ "$RESPONSE" -eq 404 ]; then
            echo "Repo not found. Creating it..."
            curl -X POST https://api.cloudsmith.io/v1/repos/${{ env.CLOUDSMITH_NAMESPACE }}// \
              -H "Authorization: Bearer $CLOUDSMITH_API_KEY" \
              -H "Content-Type: application/json" \
              -d "{\"name\": \"${{ env.CLOUDSMITH_REPOSITORY }}\", \"description\": \"Staging repo for packages\", \"repository_type\": \"private\"}"
          else
            echo "Repo already exists or accessible (HTTP $RESPONSE)"
          fi
        shell: bash

      - name: Push package to Cloudsmith
        run: |
          if ! ls dist/*.tar.gz 1> /dev/null 2>&1; then
            echo "No package found to upload"
            exit 1
          fi
          cloudsmith push python ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_REPOSITORY }} dist/*.tar.gz --republish
        shell: bash